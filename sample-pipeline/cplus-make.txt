pipeline {
    agent {
        docker {
            image 'gcc:14'
            args '-v $HOME/.cache:/root/.cache -u root'
        }
    }
    environment {
        GIT_SSL_NO_VERIFY = 'true'
    }
    stages {
        
        stage('Install Dependencies') {
            steps {
                sh '''
                    echo "=== ÎùºÏù¥Î∏åÎü¨Î¶¨ ÏÑ§Ïπò ==="
                    apt-get update
                    apt-get install -y \
                        libssl-dev \
                        libcrypto++-dev \
                        libjsoncpp-dev \
                        make \
                        pkg-config \
                        git
                    
                    ldconfig
                    
                    echo "‚úÖ ÏÑ§Ïπò ÏôÑÎ£å"
                '''
            }
        }
        
        stage('Clone') {
            steps {
                withCredentials([
                    usernamePassword(
                        credentialsId: 'gitlab-user-jks-pw', 
                        usernameVariable: 'USER', 
                        passwordVariable: 'TOKEN'
                    )
                ]) {
                    sh '''
                        echo "=== Git Clone ÏãúÏûë ==="
                        git config --global http.sslVerify false
                        rm -rf openssl-cplus
                        git clone https://${USER}:${TOKEN}@192.168.0.12:7743/JKS/openssl-cplus.git
                        echo "‚úÖ Clone ÏÑ±Í≥µ"
                    '''
                }
            }
        }
        
        stage('Make Clean') {
            steps {
                dir('openssl-cplus') {
                    sh '''
                        echo "=== Make Clean ÏãúÏûë ==="
                        make clean
                        echo "‚úÖ Clean ÏôÑÎ£å"
                    '''
                }
            }
        }
        
        stage('Make Build') {
            steps {
                dir('openssl-cplus') {
                    sh '''
                        echo "=== Make Build ÏãúÏûë ==="
                        make
                        echo "‚úÖ ÎπåÎìú ÏÑ±Í≥µ"
                    '''
                }
            }
        }
        
        stage('Run Program') {
            steps {
                dir('openssl-cplus') {
                    sh '''
                        echo "=== ÌîÑÎ°úÍ∑∏Îû® Ïã§Ìñâ ==="
                        echo "-----------------------------------"
                        ./program-service
                        echo "-----------------------------------"
                        echo "‚úÖ Ïã§Ìñâ ÏôÑÎ£å"
                    '''
                }
            }
        }
    }
    post {
        success {
            echo "‚úÖ Pipeline ÏÑ±Í≥µ"
        }
        failure {
            echo "‚ùå Pipeline Ïã§Ìå®"
        }
        always {
            echo "üîÑ Pipeline Ï¢ÖÎ£å"
        }
    }
}